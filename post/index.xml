<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jacques Smuts</title>
    <link>https://jacquessmuts.github.io/post/</link>
    <description>Recent content in Posts on Jacques Smuts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 20 May 2019 23:12:36 +0200</lastBuildDate>
    
	<atom:link href="https://jacquessmuts.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Escaping Callback Hell with Generic SuspendCoroutine Infix Extension Functions</title>
      <link>https://jacquessmuts.github.io/post/callback_hell/</link>
      <pubDate>Mon, 20 May 2019 23:12:36 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/callback_hell/</guid>
      <description>&lt;p&gt;Callback hell happens all the time in Android. Luckily, with coroutines, there&amp;rsquo;s an easy way out.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Problem with Kotlin Kfunction Receiver Functions</title>
      <link>https://jacquessmuts.github.io/post/kfunction_analogues/</link>
      <pubDate>Wed, 08 May 2019 17:54:58 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/kfunction_analogues/</guid>
      <description>&lt;p&gt;KFunction can be written in more than one way. Here&amp;rsquo;s a list of analogues, plus some criticism of the Receiver Function.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating and Deploying an Android Library via CircleCI</title>
      <link>https://jacquessmuts.github.io/post/library_template/</link>
      <pubDate>Tue, 07 May 2019 22:19:00 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/library_template/</guid>
      <description>&lt;p&gt;This is the template I use to create new Android libraries with CircleCI support for Continuous Deployment.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Generics &#43; Reflection &#43; Type Inference &#43; Reified Type = Kotlin Magic</title>
      <link>https://jacquessmuts.github.io/post/generic_interface_and_methods/</link>
      <pubDate>Wed, 01 May 2019 08:30:00 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/generic_interface_and_methods/</guid>
      <description>&lt;p&gt;With Kotlin, it&amp;rsquo;s easier than ever to code with reflection and generics. This post attempts to give one example.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Don&#39;t Pass Around Your Room/Database Entity</title>
      <link>https://jacquessmuts.github.io/post/modularization_room/</link>
      <pubDate>Thu, 25 Apr 2019 10:35:54 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/modularization_room/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re thinking of modularizing your Android App and you use Android Room, you should not pass around your Room Entity.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Is your modularization making any progress?</title>
      <link>https://jacquessmuts.github.io/post/modularization/</link>
      <pubDate>Sat, 20 Apr 2019 21:15:17 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/modularization/</guid>
      <description>&lt;p&gt;You should modularize your Kotlin Android app, since it&amp;rsquo;s the best way to enforce &lt;a href=&#34;https://developer.android.com/jetpack/docs/guide#common-principles&#34;&gt;separation of concerns&lt;/a&gt;, but how do you know if you&amp;rsquo;re doing it right? Here&amp;rsquo;s some tips to help.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How I made this</title>
      <link>https://jacquessmuts.github.io/post/how_i_made_this/</link>
      <pubDate>Sat, 20 Apr 2019 10:43:30 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/how_i_made_this/</guid>
      <description>&lt;p&gt;This details how I made this static github page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Original Site</title>
      <link>https://jacquessmuts.github.io/post/original-site/</link>
      <pubDate>Thu, 18 Apr 2019 17:03:47 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/original-site/</guid>
      <description>&lt;p&gt;My original site is at &lt;a href=&#34;https://jacquessmuts.com&#34;&gt;JacquesSmuts.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>References</title>
      <link>https://jacquessmuts.github.io/post/references/</link>
      <pubDate>Thu, 10 Jan 2019 19:53:22 +0200</pubDate>
      
      <guid>https://jacquessmuts.github.io/post/references/</guid>
      <description>List of appearances and refences, from new to old 2019-05-14: Generics Article featured in Android Weekly #361
2019-05-05: Room Article featured in Android Weekly #360
2019-05-05: Generics Article featured in Kotlin Weekly #144
2018-12-09: RxJava Presentation featured in Android Weekly #339
2018-12-07: Presented RxJava: As Simple and Powerful As I Can Make It at GDG DevFest Johannesburg 2018</description>
    </item>
    
  </channel>
</rss>